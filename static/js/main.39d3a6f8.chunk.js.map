{"version":3,"sources":["components/AppBar.js","constants/index.js","components/RFF/TextField.js","utils/index.js","components/Fields/FirstGroupFields.js","components/Fields/SecondGroupFields.js","components/RFF/Select.js","components/Fields/ThirdGroupFields.js","components/Fields/FourthGroupFields.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["AppBar","Box","sx","flexGrow","position","Toolbar","Typography","variant","component","RFFTextField","name","other","props","TextField","fullWidth","input","value","onChange","createArray","length","Array","from","getIsEveningShift","Date","getHours","calculateCash","values","Number","total","credit","debit","coupon","calculateCardTip","till","cash","Math","abs","calculateTotalTip","cardTip","cashTip","roundToThree","num","round","getEmployeesShareMap","numOfStaff","staffPrefix","totalTip","totalHours","numOfTrainerHours","forEach","_","idx","map","sharePerHour","remainderFromTrainee","share","remainder","extraSharePerHour","FirstGroupFields","isEveningShift","yearMonthDay","today","day","getDate","month","getMonth","year","getFullYear","getYearMonthDay","marginBottom","Grid","container","alignItems","spacing","item","xs","label","type","InputProps","readOnly","SecondGroupFields","RFFSelect","children","FormControl","InputLabel","Select","ThirdGroupFields","kitchenTip","calculateKitchenTip","numOfKitchenStaff","kitchenStaffShareMap","MenuItem","marginTop","startAdornment","InputAdornment","staffTip","FourthGroupFields","waitTip","calculateWaitTip","numOfWaitStaff","getInitialValues","Form","onSubmit","initialValues","render","noValidate","Paper","padding","Divider","process","App","className","style","margin","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39d3a6f8.chunk.js","sourcesContent":["import React from 'react';\nimport MUIAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport { APP_TITLE } from 'src/constants';\n\nexport default function AppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <MUIAppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {APP_TITLE}\n          </Typography>\n        </Toolbar>\n      </MUIAppBar>\n    </Box>\n  );\n}\n","export const APP_TITLE = 'Shio Tip Calculator';\n\nexport const KITCHEN_STAFF_RATIO = 0.4;\nexport const WAIT_STAFF_RATIO = 0.6;\n\nexport const AFTERNOON_KITCHEN_PART_TIME_HOUR = 4;\nexport const AFTERNOON_WAIT_PART_TIME_HOUR = 3.5;\nexport const EVENING_KITCHEN_PART_TIME_HOUR = 5;\nexport const EVENING_WAIT_PART_TIME_HOUR = 4;\nexport const DEFAULT_TIP_RATIO = 1;\n\nexport const AFTERNOON_CLOSING_HOUR = 16;\n","import TextField from '@mui/material/TextField';\nimport { Field } from 'react-final-form';\n\nexport default function RFFTextField({ name, ...other }) {\n  return (\n    <Field name={name}>\n      {(props) => (\n        <TextField\n          {...other}\n          fullWidth\n          name={props.input.name}\n          value={props.input.value}\n          onChange={props.input.onChange}\n        />\n      )}\n    </Field>\n  );\n}\n","import {\n  AFTERNOON_CLOSING_HOUR,\n  KITCHEN_STAFF_RATIO,\n  WAIT_STAFF_RATIO,\n} from 'src/constants';\n\nexport const createArray = (length) => Array.from(Array(length));\n\nexport const getIsEveningShift = () => {\n  const today = new Date();\n  const hour = today.getHours();\n\n  return hour > AFTERNOON_CLOSING_HOUR;\n};\n\nexport const getYearMonthDay = () => {\n  const today = new Date();\n  const day = today.getDate();\n  const month = today.getMonth() + 1;\n  const year = today.getFullYear();\n\n  return `${year}-${month}-${day}`;\n};\n\nexport const calculateCash = (values) => {\n  const total = Number(values.total) || 0;\n  const credit = Number(values.credit) || 0;\n  const debit = Number(values.debit) || 0;\n  const coupon = Number(values.coupon) || 0;\n\n  return total - credit - debit - coupon;\n};\n\nexport const calculateCardTip = (values) => {\n  const till = Number(values.till) || 0;\n  const cash = calculateCash(values);\n\n  return Math.abs(cash) + till;\n};\n\nexport const calculateTotalTip = (values) => {\n  const cardTip = calculateCardTip(values);\n  const cashTip = Number(values.cashTip) || 0;\n\n  return cashTip + cardTip;\n};\n\nexport const roundToThree = (num) => {\n  return +(Math.round(num + 'e+3') + 'e-3');\n};\n\nexport const calculateKitchenTip = (values) => {\n  return calculateTotalTip(values) * KITCHEN_STAFF_RATIO;\n};\n\nexport const calculateWaitTip = (values) => {\n  return calculateTotalTip(values) * WAIT_STAFF_RATIO;\n};\n\nexport const getEmployeesShareMap = (\n  values,\n  numOfStaff,\n  staffPrefix,\n  totalTip\n) => {\n  // Calculate total values\n  let totalHours = 0;\n  let numOfTrainerHours = 0;\n  createArray(numOfStaff).forEach((_, idx) => {\n    if (values[`${staffPrefix}#${idx}Ratio`] === 1) {\n      numOfTrainerHours += Number(values[`${staffPrefix}#${idx}Hour`]);\n    }\n\n    totalHours += Number(values[`${staffPrefix}#${idx}Hour`]);\n  });\n\n  // Calculate individual share first\n  const map = {};\n  const sharePerHour = totalTip / totalHours;\n  let remainderFromTrainee = 0;\n  createArray(numOfStaff).forEach((_, idx) => {\n    let share = Number(values[`${staffPrefix}#${idx}Hour`]) * sharePerHour;\n\n    if (values[`${staffPrefix}#${idx}Ratio`] < 1) {\n      const remainder = share - share * values[`${staffPrefix}#${idx}Ratio`];\n      remainderFromTrainee += remainder;\n\n      share = share * values[`${staffPrefix}#${idx}Ratio`];\n    }\n\n    map[`${staffPrefix}#${idx}`] = share;\n  });\n\n  // Add extra tips from trainees to trainers\n  const extraSharePerHour = remainderFromTrainee / numOfTrainerHours;\n  createArray(numOfStaff).forEach((_, idx) => {\n    if (values[`${staffPrefix}#${idx}Ratio`] === 1) {\n      map[`${staffPrefix}#${idx}`] +=\n        Number(values[`${staffPrefix}#${idx}Hour`]) * extraSharePerHour;\n    }\n  });\n\n  return map;\n};\n","import { Grid, TextField, Typography } from '@mui/material';\n\nimport RFFTextField from 'src/components/RFF/TextField';\nimport {\n  calculateCash,\n  calculateCardTip,\n  getIsEveningShift,\n  getYearMonthDay,\n} from 'src/utils';\n\nexport default function FirstGroupFields({ values }) {\n  const cash = calculateCash(values);\n  const cardTip = calculateCardTip(values);\n  const isEveningShift = getIsEveningShift();\n  const yearMonthDay = getYearMonthDay();\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"div\" sx={{ marginBottom: 2 }}>\n        {yearMonthDay} <b>{isEveningShift ? 'Evening' : 'Afternoon'}</b> Shift\n      </Typography>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item xs={12}>\n          <RFFTextField fullWidth label=\"Total\" name=\"total\" type=\"number\" />\n        </Grid>\n        <Grid item xs={6}>\n          <RFFTextField label=\"Credit\" name=\"credit\" type=\"number\" />\n        </Grid>\n        <Grid item xs={6}>\n          <RFFTextField label=\"Debit\" name=\"debit\" type=\"number\" />\n        </Grid>\n        <Grid item xs={6}>\n          <RFFTextField label=\"Coupon\" name=\"coupon\" type=\"number\" />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Cash\"\n            value={cash}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <RFFTextField label=\"Till\" name=\"till\" type=\"number\" />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Card Tip (Cash + Till)\"\n            value={cardTip}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { Grid, TextField, Typography } from '@mui/material';\n\nimport RFFTextField from 'src/components/RFF/TextField';\nimport { calculateCardTip, calculateTotalTip } from 'src/utils';\n\nexport default function SecondGroupFields({ values }) {\n  const cardTip = calculateCardTip(values);\n  const totalTip = calculateTotalTip(values);\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"div\" sx={{ marginBottom: 2 }}>\n        Tips\n      </Typography>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item xs={6}>\n          <RFFTextField label=\"Cash Tip\" name=\"cashTip\" type=\"number\" />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Card Tip\"\n            value={cardTip}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Total Tip (Cash + Card)\"\n            value={totalTip}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport { Field } from 'react-final-form';\n\nexport default function RFFSelect({ name, label, children, ...other }) {\n  return (\n    <Field name={name}>\n      {(props) => (\n        <FormControl fullWidth>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            {...other}\n            label={label}\n            name={props.input.name}\n            value={props.input.value}\n            onChange={props.input.onChange}\n          >\n            {children}\n          </Select>\n        </FormControl>\n      )}\n    </Field>\n  );\n}\n","import {\n  Grid,\n  TextField,\n  Typography,\n  MenuItem,\n  InputAdornment,\n} from '@mui/material';\n\nimport RFFSelect from 'src/components/RFF/Select';\nimport RFFTextField from 'src/components/RFF/TextField';\nimport {\n  calculateKitchenTip,\n  createArray,\n  getEmployeesShareMap,\n  roundToThree,\n} from 'src/utils';\n\nexport default function ThirdGroupFields({ values }) {\n  const kitchenTip = roundToThree(calculateKitchenTip(values));\n  const numOfKitchenStaff = Number(values.numOfKitchenStaff) || 0;\n  const kitchenStaffShareMap = getEmployeesShareMap(\n    values,\n    numOfKitchenStaff,\n    'kitchenStaff',\n    kitchenTip\n  );\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"div\" sx={{ marginBottom: 2 }}>\n        Kitchen\n      </Typography>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Tip (Total * 0.4)\"\n            value={kitchenTip}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <RFFSelect label=\"Staff #\" name=\"numOfKitchenStaff\">\n            <MenuItem value={6}>6</MenuItem>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={4}>4</MenuItem>\n          </RFFSelect>\n        </Grid>\n      </Grid>\n      {createArray(numOfKitchenStaff).map((_, idx) => {\n        return (\n          <Grid container key={idx} spacing={1} sx={{ marginTop: 0.5 }}>\n            <Grid item xs={5}>\n              <RFFTextField\n                label=\"Staff Name\"\n                name={`kitchenStaff#${idx}Name`}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">{idx + 1}.</InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <RFFTextField\n                label=\"Hour\"\n                name={`kitchenStaff#${idx}Hour`}\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <RFFSelect label=\"Ratio\" name={`kitchenStaff#${idx}Ratio`}>\n                <MenuItem value={1}>100%</MenuItem>\n                <MenuItem value={0.8}>80%</MenuItem>\n                <MenuItem value={0.7}>70%</MenuItem>\n                <MenuItem value={0.5}>50%</MenuItem>\n              </RFFSelect>\n            </Grid>\n          </Grid>\n        );\n      })}\n      <Typography\n        variant=\"subtitle1\"\n        component=\"div\"\n        sx={{ marginTop: 2, marginBottom: 1 }}\n      >\n        Kitchen Staff Tips\n      </Typography>\n      <Grid container spacing={1}>\n        {createArray(numOfKitchenStaff).map((_, idx) => {\n          const staffTip = roundToThree(\n            kitchenStaffShareMap[`kitchenStaff#${idx}`]\n          );\n\n          return (\n            <Grid item key={idx} xs={6}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  readOnly: true,\n                  startAdornment: (\n                    <InputAdornment position=\"start\">{idx + 1}.</InputAdornment>\n                  ),\n                }}\n                value={staffTip}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n","import {\n  Grid,\n  TextField,\n  Typography,\n  MenuItem,\n  InputAdornment,\n} from '@mui/material';\n\nimport RFFSelect from 'src/components/RFF/Select';\nimport RFFTextField from 'src/components/RFF/TextField';\nimport {\n  calculateWaitTip,\n  createArray,\n  roundToThree,\n  getEmployeesShareMap,\n} from 'src/utils';\n\nexport default function FourthGroupFields({ values }) {\n  const waitTip = roundToThree(calculateWaitTip(values));\n  const numOfWaitStaff = Number(values.numOfWaitStaff) || 0;\n  const kitchenStaffShareMap = getEmployeesShareMap(\n    values,\n    numOfWaitStaff,\n    'waitStaff',\n    waitTip\n  );\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"div\" sx={{ marginBottom: 2 }}>\n        Waitress\n      </Typography>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n            label=\"Tip (Total * 0.6)\"\n            value={waitTip}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <RFFSelect label=\"Staff #\" name=\"numOfWaitStaff\">\n            <MenuItem value={4}>4</MenuItem>\n            <MenuItem value={3}>3</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n          </RFFSelect>\n        </Grid>\n      </Grid>\n      {createArray(numOfWaitStaff).map((_, idx) => {\n        return (\n          <Grid container key={idx} spacing={1} sx={{ marginTop: 0.5 }}>\n            <Grid item xs={5}>\n              <RFFTextField\n                label=\"Staff Name\"\n                name={`waitStaff#${idx}Name`}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">{idx + 1}.</InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <RFFTextField\n                label=\"Hour\"\n                name={`waitStaff#${idx}Hour`}\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <RFFSelect label=\"Ratio\" name={`waitStaff#${idx}Ratio`}>\n                <MenuItem value={1}>100%</MenuItem>\n                <MenuItem value={0.8}>80%</MenuItem>\n                <MenuItem value={0.7}>70%</MenuItem>\n                <MenuItem value={0.5}>50%</MenuItem>\n              </RFFSelect>\n            </Grid>\n          </Grid>\n        );\n      })}\n      <Typography\n        variant=\"subtitle1\"\n        component=\"div\"\n        sx={{ marginTop: 2, marginBottom: 1 }}\n      >\n        Wait Staff Tips\n      </Typography>\n      <Grid container spacing={1}>\n        {createArray(numOfWaitStaff).map((_, idx) => {\n          const staffTip = roundToThree(\n            kitchenStaffShareMap[`waitStaff#${idx}`]\n          );\n\n          return (\n            <Grid item key={idx} xs={6}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  readOnly: true,\n                  startAdornment: (\n                    <InputAdornment position=\"start\">{idx + 1}.</InputAdornment>\n                  ),\n                }}\n                value={staffTip}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n","import { Paper, Divider } from '@mui/material';\nimport { Form as RFFForm } from 'react-final-form';\n\nimport FirstGroupFields from 'src/components/Fields/FirstGroupFields';\nimport SecondGroupFields from 'src/components/Fields/SecondGroupFields';\nimport ThirdGroupFields from 'src/components/Fields/ThirdGroupFields';\nimport FourthGroupFields from 'src/components/Fields/FourthGroupFields';\nimport {\n  AFTERNOON_KITCHEN_PART_TIME_HOUR,\n  AFTERNOON_WAIT_PART_TIME_HOUR,\n  DEFAULT_TIP_RATIO,\n  EVENING_KITCHEN_PART_TIME_HOUR,\n  EVENING_WAIT_PART_TIME_HOUR,\n} from 'src/constants';\nimport { createArray, getIsEveningShift } from 'src/utils';\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nconst getInitialValues = () => {\n  const isEveningShift = getIsEveningShift();\n\n  const values = {\n    numOfKitchenStaff: 4,\n    numOfWaitStaff: 2,\n  };\n\n  if (isEveningShift) {\n    values['numOfKitchenStaff'] = 6;\n    values['numOfWaitStaff'] = 3;\n  }\n\n  createArray(values.numOfKitchenStaff).forEach((_, idx) => {\n    values[`kitchenStaff#${idx}Hour`] = isEveningShift\n      ? EVENING_KITCHEN_PART_TIME_HOUR\n      : AFTERNOON_KITCHEN_PART_TIME_HOUR;\n    values[`kitchenStaff#${idx}Ratio`] = DEFAULT_TIP_RATIO;\n  });\n\n  createArray(values.numOfWaitStaff).forEach((_, idx) => {\n    values[`waitStaff#${idx}Hour`] = isEveningShift\n      ? EVENING_WAIT_PART_TIME_HOUR\n      : AFTERNOON_WAIT_PART_TIME_HOUR;\n    values[`waitStaff#${idx}Ratio`] = DEFAULT_TIP_RATIO;\n  });\n\n  return values;\n};\n\nexport default function Form() {\n  return (\n    <RFFForm\n      onSubmit={() => {}}\n      initialValues={getInitialValues()}\n      render={({ values }) => {\n        return (\n          <form noValidate>\n            <Paper sx={{ padding: 2 }}>\n              <FirstGroupFields values={values} />\n              <Divider sx={{ marginTop: 2, marginBottom: 2 }} />\n              <SecondGroupFields values={values} />\n              <Divider sx={{ marginTop: 2, marginBottom: 2 }} />\n              <ThirdGroupFields values={values} />\n              <Divider sx={{ marginTop: 2, marginBottom: 2 }} />\n              <FourthGroupFields values={values} />\n            </Paper>\n            {isDevelopment && <pre>{JSON.stringify(values, 0, 2)}</pre>}\n          </form>\n        );\n      }}\n    />\n  );\n}\n","import AppBar from 'src/components/AppBar';\nimport Form from 'src/components/Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <AppBar />\n      <div style={{ padding: 16, margin: 'auto', maxWidth: 500 }}>\n        <Form />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}